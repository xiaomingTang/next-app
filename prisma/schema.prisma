// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQLDB_URI")
}

enum Role {
  ADMIN
  USER
}

enum BlogType {
  // 已发布
  PUBLISHED
  // 未发布(即 草稿)
  UNPUBLISHED
}

model User {
  id               Int              @id @default(autoincrement())
  name             String
  email            String           @unique
  password         String
  role             Role             @default(USER)
  shortUrls        ShortUrl[]
  chapterHistories ChapterHistory[]
  blogs            Blog[]
  tags             Tag[]
  uploads          Upload[]
  mediaCards       MediaCard[]
}

model Novel {
  hash      String    @id
  driver    String
  remoteUrl String    @unique
  title     String    @default("")
  author    String
  chapters  Chapter[]
}

model Chapter {
  id               Int              @id @default(autoincrement())
  index            Int
  driver           String
  remoteUrl        String           @unique
  title            String
  content          String           @db.VarChar(20000)
  novelHash        String
  novel            Novel            @relation(fields: [novelHash], references: [hash])
  chapterHistories ChapterHistory[]
}

model ChapterHistory {
  id        Int      @id @default(autoincrement())
  chapterId Int
  chapter   Chapter  @relation(fields: [chapterId], references: [id])
  createdAt DateTime @default(now())
  creatorId Int
  creator   User     @relation(fields: [creatorId], references: [id])
}

model ShortUrl {
  hash      String   @id
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  creatorId Int
  creator   User     @relation(fields: [creatorId], references: [id])
}

model Tag {
  hash        String   @id
  name        String   @unique
  description String   @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  blogs       Blog[]
  creatorId   Int
  creator     User     @relation(fields: [creatorId], references: [id])
}

model Blog {
  hash        String   @id
  type        BlogType
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String   @default("")
  content     String   @default("") @db.Text()
  description String   @default("") @db.VarChar(1000)
  tags        Tag[]
  creatorId   Int
  creator     User     @relation(fields: [creatorId], references: [id])
}

model Upload {
  hash        String   @id
  description String   @default("") @db.VarChar(100)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  creatorId   Int
  creator     User     @relation(fields: [creatorId], references: [id])
}

enum MediaCardType {
  FRUIT
  FOOD
  COLOR
}

model MediaCard {
  hash        String        @id
  title       String        @default("") @db.VarChar(100)
  description String        @default("") @db.VarChar(200)
  image       String        @default("")
  audio       String        @default("")
  video       String        @default("")
  type        MediaCardType
  order       Int           @default(0)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  creatorId   Int
  creator     User          @relation(fields: [creatorId], references: [id])
}
