 proxy_cache_path              /var/cache/nginx levels=1:2 keys_zone=nextjs_cache:10m inactive=1d use_temp_path=off;

upstream nextjs_upstream {
  server                       127.0.0.1:3000;
  keepalive                    500;
}

server {
  server_name                  www.xxx.site;
  return                       301 https://xxx.site$request_uri;
}

server {
  listen                       80;
  listen                       [::]:80;
  server_name                  xxx.site;
  root                         /path-to-root;
  index                        index.html index.htm;
  return                       301 https://$host$request_uri;
}

server {
  listen                       443 ssl http2;
  server_name                  xxx.site;
  root                         /path-to-root;
  index                        index.html index.htm;

  ssl_certificate              /path-to-ssl/xxx.site/xxx.site_bundle.crt;
  ssl_certificate_key          /path-to-ssl/xxx.site/xxx.site.key;

  ssl_ciphers                  ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
  ssl_protocols                TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers    on;

  ssl_session_cache            shared:SSL:20m;
  ssl_session_timeout          120m;

  gzip                         on;
  gzip_min_length              1k;
  gzip_buffers                 16 8k;
  gzip_comp_level              5;
  gzip_vary                    on;
  gzip_proxied                 any;
  gzip_types                   text/css application/json application/javascript image/svg+xml;

  charset                      utf-8;
  # access_log                   /var/log/nginx/your.domain.com/access.log main;
  # error_log                    /var/log/nginx/your.domain.com/error.log warn;

  location / {
    proxy_pass                 http://nextjs_upstream;
    proxy_http_version         1.1;
    proxy_set_header           Upgrade $http_upgrade;
    proxy_set_header           Connection 'upgrade';
    proxy_set_header           Host $host;
    proxy_cache_bypass         $http_upgrade;
    proxy_set_header           X-Real-IP $remote_addr;
    proxy_set_header           X-Forward-For $proxy_add_x_forwarded_for;
  }

  #                            error_page 404 /404.html;
  # location = /404.html {
  #                            internal;
  # }
}
